#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IFM02B2_Project_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProd_Category(Prod_Category instance);
    partial void UpdateProd_Category(Prod_Category instance);
    partial void DeleteProd_Category(Prod_Category instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Prod_Category> Prod_Categories
		{
			get
			{
				return this.GetTable<Prod_Category>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prod_Category")]
	public partial class Prod_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type_ID;
		
		private string _Animal_Type;
		
		private string _Produce_Type;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_IDChanging(int value);
    partial void OnType_IDChanged();
    partial void OnAnimal_TypeChanging(string value);
    partial void OnAnimal_TypeChanged();
    partial void OnProduce_TypeChanging(string value);
    partial void OnProduce_TypeChanged();
    #endregion
		
		public Prod_Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type_ID
		{
			get
			{
				return this._Type_ID;
			}
			set
			{
				if ((this._Type_ID != value))
				{
					this.OnType_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_ID = value;
					this.SendPropertyChanged("Type_ID");
					this.OnType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Animal_Type
		{
			get
			{
				return this._Animal_Type;
			}
			set
			{
				if ((this._Animal_Type != value))
				{
					this.OnAnimal_TypeChanging(value);
					this.SendPropertyChanging();
					this._Animal_Type = value;
					this.SendPropertyChanged("Animal_Type");
					this.OnAnimal_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produce_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Produce_Type
		{
			get
			{
				return this._Produce_Type;
			}
			set
			{
				if ((this._Produce_Type != value))
				{
					this.OnProduce_TypeChanging(value);
					this.SendPropertyChanging();
					this._Produce_Type = value;
					this.SendPropertyChanged("Produce_Type");
					this.OnProduce_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prod_Category_Product", Storage="_Products", ThisKey="Type_ID", OtherKey="Type_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Prod_Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Prod_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Prod_ID;
		
		private string _Brand_Name;
		
		private string _Prod_Name;
		
		private string _Description;
		
		private int _Type_ID;
		
		private string _Prod_Image;
		
		private int _Active;
		
		private int _Price;
		
		private System.Nullable<int> _Discount_Price;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _modified_at;
		
		private int _Quantity;
		
		private EntityRef<Prod_Category> _Prod_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProd_IDChanging(int value);
    partial void OnProd_IDChanged();
    partial void OnBrand_NameChanging(string value);
    partial void OnBrand_NameChanged();
    partial void OnProd_NameChanging(string value);
    partial void OnProd_NameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnType_IDChanging(int value);
    partial void OnType_IDChanged();
    partial void OnProd_ImageChanging(string value);
    partial void OnProd_ImageChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnDiscount_PriceChanging(System.Nullable<int> value);
    partial void OnDiscount_PriceChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onmodified_atChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_atChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public Product()
		{
			this._Prod_Category = default(EntityRef<Prod_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Prod_ID
		{
			get
			{
				return this._Prod_ID;
			}
			set
			{
				if ((this._Prod_ID != value))
				{
					this.OnProd_IDChanging(value);
					this.SendPropertyChanging();
					this._Prod_ID = value;
					this.SendPropertyChanged("Prod_ID");
					this.OnProd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Brand_Name
		{
			get
			{
				return this._Brand_Name;
			}
			set
			{
				if ((this._Brand_Name != value))
				{
					this.OnBrand_NameChanging(value);
					this.SendPropertyChanging();
					this._Brand_Name = value;
					this.SendPropertyChanged("Brand_Name");
					this.OnBrand_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Prod_Name
		{
			get
			{
				return this._Prod_Name;
			}
			set
			{
				if ((this._Prod_Name != value))
				{
					this.OnProd_NameChanging(value);
					this.SendPropertyChanging();
					this._Prod_Name = value;
					this.SendPropertyChanged("Prod_Name");
					this.OnProd_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_ID", DbType="Int NOT NULL")]
		public int Type_ID
		{
			get
			{
				return this._Type_ID;
			}
			set
			{
				if ((this._Type_ID != value))
				{
					if (this._Prod_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnType_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_ID = value;
					this.SendPropertyChanged("Type_ID");
					this.OnType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Image", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Prod_Image
		{
			get
			{
				return this._Prod_Image;
			}
			set
			{
				if ((this._Prod_Image != value))
				{
					this.OnProd_ImageChanging(value);
					this.SendPropertyChanging();
					this._Prod_Image = value;
					this.SendPropertyChanged("Prod_Image");
					this.OnProd_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Price", DbType="Int")]
		public System.Nullable<int> Discount_Price
		{
			get
			{
				return this._Discount_Price;
			}
			set
			{
				if ((this._Discount_Price != value))
				{
					this.OnDiscount_PriceChanging(value);
					this.SendPropertyChanging();
					this._Discount_Price = value;
					this.SendPropertyChanged("Discount_Price");
					this.OnDiscount_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="Date NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_at", DbType="Date")]
		public System.Nullable<System.DateTime> modified_at
		{
			get
			{
				return this._modified_at;
			}
			set
			{
				if ((this._modified_at != value))
				{
					this.Onmodified_atChanging(value);
					this.SendPropertyChanging();
					this._modified_at = value;
					this.SendPropertyChanged("modified_at");
					this.Onmodified_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prod_Category_Product", Storage="_Prod_Category", ThisKey="Type_ID", OtherKey="Type_ID", IsForeignKey=true)]
		public Prod_Category Prod_Category
		{
			get
			{
				return this._Prod_Category.Entity;
			}
			set
			{
				Prod_Category previousValue = this._Prod_Category.Entity;
				if (((previousValue != value) 
							|| (this._Prod_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prod_Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Prod_Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Type_ID = value.Type_ID;
					}
					else
					{
						this._Type_ID = default(int);
					}
					this.SendPropertyChanged("Prod_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
